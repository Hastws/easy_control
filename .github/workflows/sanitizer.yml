name: sanitizer
on: [push, pull_request]

jobs:
  asan_ubsan:
    runs-on: ubuntu-latest
    env:
      CC: clang
      CXX: clang++
      UBSAN_OPTIONS: print_stacktrace=1:halt_on_error=1
      ASAN_OPTIONS: abort_on_error=1:detect_leaks=1:strict_init_order=1:strict_string_checks=1
    steps:
      - uses: actions/checkout@v4

      - name: Install toolchain & deps (Clang + X11 + headless)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang lld llvm ninja-build pkg-config xvfb \
            libx11-dev libxtst-dev libxrandr-dev \
            libxkbcommon-dev libxkbcommon-x11-dev \
            libwayland-dev

      - name: Configure (Clang + ASan/UBSan)
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DCMAKE_C_FLAGS="-g -O1 -fno-omit-frame-pointer -fno-sanitize-recover=all -fsanitize=address,undefined" \
            -DCMAKE_CXX_FLAGS="-g -O1 -fno-omit-frame-pointer -fno-sanitize-recover=all -fsanitize=address,undefined -fsanitize-address-use-after-scope"
            # 如果项目支持可选关闭 X11/Wayland，请追加 -DAUTOALG_WITH_X11=ON/OFF 等开关

      - name: Build
        run: cmake --build build -j2

      - name: Test (headless via Xvfb)
        env:
          AUTOALG_HEADLESS: "1"
        run: |
          export LIBGL_ALWAYS_SOFTWARE=1
          xvfb-run -s "-screen 0 1920x1080x24" ctest --test-dir build --output-on-failure ${EXCLUDE:-}
