name: build-and-release
on:
  push:
    tags: [ "v*" ]
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with: { submodules: 'true' }

      - name: Deps (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build pkg-config nsis
          # 可按需：sudo apt-get install -y libx11-dev libxtst-dev libxkbcommon-x11-dev libxrandr-dev libxfixes-dev

      - name: Deps (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew update
          brew install cmake ninja

      - name: Deps (Windows)
        if: startsWith(matrix.os, 'windows')
        shell: pwsh
        run: |
          choco install -y ninja nsis

      - name: Configure
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Package
        run: cmake --build build --target package --config Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-packages
          path: |
            build/*.deb
            build/*.zip
            build/*.txz
            build/*.exe
            build/*.msi

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with: { path: dist }

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
